<snippet>
	<content><![CDATA[
vector<ll> prime;
void segmentedSieve(ll L,ll R) 
{
    // generate all primes up to sqrt(R)
    ll lim = sqrt(R);
    vector<ll> mark(lim + 1, 0);
    vector<ll> primes;
    for (ll i = 2; i <= lim; ++i) 
    {
        if (!mark[i]) 
        {
            primes.emplace_back(i);
            for (ll j = i * i; j <= lim; j += i)
                mark[j] = 1;
        }
    }
    vector<ll> isPrime(R - L + 1, 1);
    if (L == 1)
        isPrime[0] = 0;
    for (ll i : primes)
        for (ll j = max(i * i, (L + i - 1) / i * i); j <= R; j += i)
            isPrime[j - L] = 0;
    for(ll i=0;i<R-L+1;i++)
    {
        prime[L+i]=isPrime[i];
    }
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>tsegmentedsieve</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope>
</snippet>
