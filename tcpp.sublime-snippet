<snippet>
	<content><![CDATA[
// Remember me at bad times

/*
    Programmer : Divyank Goyal
    Nick Name  : DJ-60
    Occupation : Treatment of bugs in code
    Experience : 2 yrs
*/
#include <bits/stdc++.h>

// #pragma GCC target ("avx2")
// #pragma GCC optimization ("O3")
// #pragma GCC optimization ("unroll-loops")

using namespace std;

#define int                  long long
#define ll                   long long
#define ld                   long double
#define pb                   push_back
#define sz(a)                ((ll)a.size())
#define ceil(a)              ((ll)ceil(a))
#define min(a,b)             ((ll)min((ll)(a),(ll)(b)))
#define max(a,b)             ((ll)max((ll)(a),(ll)(b)))
#define ff                   first
#define ss                   second
#define sp(x)                setprecision(x)
#define pow2(x)              ((ll)1<<(x))
#define countsetbit(n)       __builtin_popcount(n)
#define M                    ((1000*1000*1000) + 7)
// #define M                    998244353

ll memory = 0, tim = 0, ttt = 0;
#ifndef ONLINE_JUDGE
#define cout if(++memory && memory>210000){cout<<"\nOUT OF MEMORY";exit(0);}else cout
#define ttt {tim++;if(tim>450000000){cout<<"\nEXIT INFINTY LOOP";exit(0);}}
#endif


void print(vector<ll> &v)
{
    cout << "\nVector - " << v.size() << "\n{ ";
    for (ll i = 0; i < v.size(); i++)
    {
        cout << v[i] << " ";
    }
    cout << "}\n";
}

ll power(ll a, ll b)
{
    ll res = 1;
    while (b > 0)
    {
        if (b % 2 == 1)
        {
            res = res * a;
        }
        a = a * a;
        b = b / 2;
    }
    return res;
}

bool sortbysec(pair<ll, ll> a, pair<ll, ll> b)
{
    if (a.ss == b.ss)
        return a.ff < b.ff;
    return a.ss < b.ss;
}

void DJ()
{
    ll n = 0, m = 0, i, j, k = 0, l = 0, mini = INT_MAX, maxi = 0, ans = 0, sum = 0;
    ll x = 0, y = 0, z = 0, r = 0;
    char ch;
    cin >> n;
    vector<ll> a(1, 0);
    for (i = 1; i <= n; i++)
    {
        cin >> x;
        a.pb(x);
    }
}

signed main()
{
    ios_base::sync_with_stdio(false);
    cout.tie(NULL);
    cin.tie(NULL);
    // prime.resize(2000005, 0);            segmentedSieve(1,2000002);
    // sfact.resize(200005);                sievefactor(200002);
    // modcal();
    ll number = 1;
    cin >> number;
    for (ll i = 1; i <= number; i++)
    {
        // cout<<"Case #"<<i<<": ";
        DJ();
    }
    cout << "\n";
    return 0;
}

]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>fcpp</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope>
</snippet>
